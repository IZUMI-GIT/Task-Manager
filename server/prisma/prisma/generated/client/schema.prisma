// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

// Looking for ways to speed up your queries, or scale easily with your serverless or edge functions?
// Try Prisma Accelerate: https://pris.ly/cli/accelerate-init

generator client {
  provider = "prisma-client-js"
  output   = "./prisma/generated/client"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

model User {
  id           Int      @id @default(autoincrement())
  firstName    String
  lastName     String
  userName     String   @unique
  email        String   @unique
  passwordHash String
  createdAt    DateTime @default(now())
  boards       Board[]
}

model Board {
  id        Int      @id @default(autoincrement())
  title     String
  userId    Int
  user      User     @relation(fields: [userId], references: [id], onDelete: Cascade, onUpdate: Cascade)
  lists     List[]
  createdAt DateTime @default(now())
}

model List {
  id        Int      @id @unique @default(autoincrement())
  title     String
  position  Int      @default(autoincrement())
  boardId   Int
  board     Board    @relation(fields: [boardId], references: [id], onDelete: Cascade, onUpdate: Cascade)
  cards     Card[]
  createdAt DateTime @default(now())

  @@unique([boardId, position])
}

model Card {
  id          Int       @id @unique @default(autoincrement())
  title       String
  description String
  checklists  Boolean   @default(false)
  position    Int       @default(autoincrement())
  listId      Int
  list        List      @relation(fields: [listId], references: [id], onDelete: Cascade, onUpdate: Cascade)
  comments    Comment[]
  createdAt   DateTime  @default(now())

  @@unique([listId, position])
}

model Comment {
  id     Int  @id @unique @default(autoincrement())
  cardId Int
  card   Card @relation(fields: [cardId], references: [id], onDelete: Cascade, onUpdate: Cascade)
}
